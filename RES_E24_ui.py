# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI/RES_E24.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets 


import math


class Ui_Results(object):



    def setupUi(self, Results):
        width=int(1200)
        heigh=int(800)
        
        Results.setObjectName("Results")
        Results.resize(width, heigh)
        
        Results.setWindowTitle("Results")
        Results.setMinimumSize(width, heigh)
        Results.setMaximumSize(width, heigh)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)

        self.centralwidget = QtWidgets.QWidget(Results)
        self.centralwidget.setObjectName("centralwidget")
        
        self.table = QtWidgets.QTableWidget(Results)
        self.table.setObjectName("table")
        self.table.setGeometry(QtCore.QRect(10, 10, width-20, heigh-20))




class Ui_RES_E24_Calculator(object):



    def setupUi(self, RES_E24_Calculator):
        RES_E24_Calculator.setObjectName("RES_E24_Calculator")
        RES_E24_Calculator.resize(740, 570)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        RES_E24_Calculator.setMinimumSize(740, 570)
        RES_E24_Calculator.setMaximumSize(740, 570)
        sizePolicy.setHeightForWidth(RES_E24_Calculator.sizePolicy().hasHeightForWidth())

        RES_E24_Calculator.setSizePolicy(sizePolicy)
        RES_E24_Calculator.setWhatsThis("")
        RES_E24_Calculator.setIconSize(QtCore.QSize(100, 100))
        self.centralwidget = QtWidgets.QWidget(RES_E24_Calculator)
        self.centralwidget.setObjectName("centralwidget")
        RES_E24_Calculator.setWindowTitle("RES_E24 Calculator")
       

##        self.menubar = QtWidgets.QMenuBar(RES_E24_Calculator)
##        self.menubar.setObjectName(u"menubar")
##        self.menubar.setGeometry(QtCore.QRect(10, 10, 740, 21))
##        RES_E24_Calculator.setMenuBar(self.menubar)
##        self.menuAbout = QtWidgets.QMenu(self.menubar)
##        self.menuAbout.setObjectName(u"menuAbout")
##        self.menuAbout.setTitle(u"About")

        self.R1_a__parr__R1_b = QtWidgets.QPushButton(self.centralwidget)
        self.R1_a__parr__R1_b.setGeometry(QtCore.QRect(100, 90, 100, 100))
        self.R1_a__parr__R1_b.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icons/R1_a__parr__R1_b.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.R1_a__parr__R1_b.setIcon(icon)
        self.R1_a__parr__R1_b.setIconSize(QtCore.QSize(100, 100))
        self.R1_a__parr__R1_b.setObjectName("R1_a__parr__R1_b")

        
        self.Go = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.Go.setGeometry(QtCore.QRect(540, 510, 90, 40))
        self.Go.setObjectName("Go")
        self.Go.setText("Go")
        self.Go.setDefault(True)

        self.short = QtWidgets.QShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Return or QtCore.Qt.Key_Enter), self.centralwidget)


        self.help = QtWidgets.QPushButton(self.centralwidget)
        self.help.setGeometry(QtCore.QRect(560+120, 510, 40, 40))
        self.help.setText("?")
        self.help.setObjectName("Help")
        
        self.R2__parr__R1_a__parr__R1_b = QtWidgets.QPushButton(self.centralwidget)
        self.R2__parr__R1_a__parr__R1_b.setGeometry(QtCore.QRect(100, 290, 100, 100))
        self.R2__parr__R1_a__parr__R1_b.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/icons/R2__parr__R1_a__parr__R1_b.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.R2__parr__R1_a__parr__R1_b.setIcon(icon1)
        self.R2__parr__R1_a__parr__R1_b.setIconSize(QtCore.QSize(100, 100))
        self.R2__parr__R1_a__parr__R1_b.setObjectName("R2__parr__R1_a__parr__R1_b")

        
        self.label_1_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1_1.setGeometry(QtCore.QRect(100, 70, 100, 16))
        self.label_1_1.setObjectName("label_1_1")
        self.label_1_1.setText("R1_a // R1_b")
        
        self.label_1_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_1_2.setGeometry(QtCore.QRect(100, 270, 100, 16))
        self.label_1_2.setObjectName("label_1_2")
        self.label_1_2.setText("R2 // R1_a // R1_b")

        self.label_2_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_2_1.setGeometry(QtCore.QRect(240, 70, 100, 16))
        self.label_2_1.setObjectName("label_2_1")
        self.label_2_1.setText("R1_a + R1_b")

        self.label_2_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2_2.setGeometry(QtCore.QRect(240, 270, 100, 16))
        self.label_2_2.setObjectName("label_2_2")
        self.label_2_2.setText("R2 + R1_a + R1_b")

        self.label_3_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_3_1.setGeometry(QtCore.QRect(480, 70, 161, 16))
        self.label_3_1.setObjectName("label_3_1")
        self.label_3_1.setText("R2 / ( R2 + R1_a )")

        self.label_3_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_3_2.setGeometry(QtCore.QRect(480, 270, 161, 16))
        self.label_3_2.setObjectName("label_3_2")
        self.label_3_2.setText("R2 / ( R2 + R1_a + R1_b )")

        
        
        self.R1_a__ser__R1_b = QtWidgets.QPushButton(self.centralwidget)
        self.R1_a__ser__R1_b.setGeometry(QtCore.QRect(240, 90, 200, 50))
        self.R1_a__ser__R1_b.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons/R1_a__ser__R1_b.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.R1_a__ser__R1_b.setIcon(icon2)
        self.R1_a__ser__R1_b.setIconSize(QtCore.QSize(250, 50))
        self.R1_a__ser__R1_b.setObjectName("R1_a__ser__R1_b")

        self.R2__ser__R1_a__ser__R1_b = QtWidgets.QPushButton(self.centralwidget)
        self.R2__ser__R1_a__ser__R1_b.setGeometry(QtCore.QRect(240, 290, 200, 50))
        self.R2__ser__R1_a__ser__R1_b.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/icons/R2__ser__R1_a__ser__R1_b.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.R2__ser__R1_a__ser__R1_b.setIcon(icon3)
        self.R2__ser__R1_a__ser__R1_b.setIconSize(QtCore.QSize(250, 50))
        self.R2__ser__R1_a__ser__R1_b.setObjectName("R2__ser__R1_a__ser__R1_b")

        self.R2__div__R1_a = QtWidgets.QPushButton(self.centralwidget)
        self.R2__div__R1_a.setGeometry(QtCore.QRect(480, 90, 180, 150))
        self.R2__div__R1_a.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/icons/R2__div__R1_a.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.R2__div__R1_a.setIcon(icon4)
        self.R2__div__R1_a.setIconSize(QtCore.QSize(180, 150))
        self.R2__div__R1_a.setObjectName("R2__div__R1_a")
        
        self.R2__div__R1_a__ser__R1_b = QtWidgets.QPushButton(self.centralwidget)
        self.R2__div__R1_a__ser__R1_b.setGeometry(QtCore.QRect(480, 290, 220, 150))
        self.R2__div__R1_a__ser__R1_b.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/icons/R2__div__R1_a__ser__R1_b.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.R2__div__R1_a__ser__R1_b.setIcon(icon5)
        self.R2__div__R1_a__ser__R1_b.setIconSize(QtCore.QSize(220, 150))
        self.R2__div__R1_a__ser__R1_b.setObjectName("R2__div__R1_a__ser__R1_b")

        

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(210, 70, 20, 341))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(450, 70, 20, 391))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(90, 250, 611, 16))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)

        self.Label_Serial = QtWidgets.QLabel(self.centralwidget)
        self.Label_Serial.setGeometry(QtCore.QRect(220, 30, 241, 21))
        self.Label_Serial.setFont(font)
        self.Label_Serial.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_Serial.setObjectName("Label_Serial")
        self.Label_Serial.setText("Serial")
          
        self.Label_Parallel = QtWidgets.QLabel(self.centralwidget)
        self.Label_Parallel.setGeometry(QtCore.QRect(80, 30, 141, 21))
        self.Label_Parallel.setFont(font)
        self.Label_Parallel.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_Parallel.setObjectName("Label_Parallel")
        self.Label_Parallel.setText("Parallel")
        
        self.Label_Divider = QtWidgets.QLabel(self.centralwidget)
        self.Label_Divider.setGeometry(QtCore.QRect(460, 30, 261, 21))
        self.Label_Divider.setFont(font)
        self.Label_Divider.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_Divider.setObjectName("Label_Divider")
        self.Label_Divider.setText("Divider")

        
        self.Label_2res = QtWidgets.QLabel(self.centralwidget)
        self.Label_2res.setGeometry(QtCore.QRect(10, 140, 71, 21))
        self.Label_2res.setFont(font)
        self.Label_2res.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_2res.setObjectName("Label_2res")
        self.Label_2res.setText("2 res")


        
        self.Label_3res = QtWidgets.QLabel(self.centralwidget)
        self.Label_3res.setGeometry(QtCore.QRect(10, 340, 71, 21))
        self.Label_3res.setFont(font)
        self.Label_3res.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_3res.setObjectName("Label_3res")
        self.Label_3res.setText("3 res")


        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 721, 461))
        self.groupBox.setObjectName("groupBox")
        self.groupBox.setTitle("1. Select topology")
  

        self.Label_formula = QtWidgets.QLabel(self.groupBox)
        self.Label_formula.setGeometry(QtCore.QRect(20, 400, 131, 16))
        self.Label_formula.setObjectName("Label_formula")
        self.Label_formula.setText("Edit formula (optional)")

        
        self.formula = QtWidgets.QLineEdit(self.groupBox)
        self.formula.setGeometry(QtCore.QRect(20, 420, 411, 20))
        self.formula.setObjectName("formula")

        
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 490, 281, 71))
        self.groupBox_2.setObjectName("groupBox_2")
        self.groupBox_2.setTitle("2. Limit resistor range (optional)")
 

        self.res_select = QtWidgets.QComboBox(self.groupBox_2)
        self.res_select.addItem("")
        self.res_select.addItem("")
        self.res_select.addItem("")
        self.res_select.addItem("")
        self.res_select.setObjectName("res_select")
        self.res_select.setGeometry(QtCore.QRect(10, 40, 61, 22))
        self.res_select.setItemText(0, "R1_a")
        self.res_select.setItemText(1, "R1_b")
        self.res_select.setItemText(2, "R2")
        self.res_select.setItemText(3, "none")

        
        self.Label_Resistor = QtWidgets.QLabel(self.groupBox_2)
        self.Label_Resistor.setGeometry(QtCore.QRect(10, 20, 51, 16))
        self.Label_Resistor.setObjectName("Label_Resistor")
        self.Label_Resistor.setText("Resistor")

        
        self.Label_Min = QtWidgets.QLabel(self.groupBox_2)
        self.Label_Min.setGeometry(QtCore.QRect(80, 20, 71, 16))
        self.Label_Min.setObjectName("Label_Min")
        self.Label_Min.setText("Min")
       
        self.res_min = QtWidgets.QLineEdit(self.groupBox_2)
        self.res_min.setGeometry(QtCore.QRect(80, 40, 91, 20))
        self.res_min.setObjectName("res_min")
        self.res_min.setText("1e3")
        #self.res_min.setValidator(QtGui.QDoubleValidator(1.0,1.0e6,1))
        
        self.Label_Max = QtWidgets.QLabel(self.groupBox_2)
        self.Label_Max.setGeometry(QtCore.QRect(180, 20, 71, 16))
        self.Label_Max.setObjectName("Label_Max")
        self.Label_Max.setText("Max")
     
        self.res_max = QtWidgets.QLineEdit(self.groupBox_2)
        self.res_max.setGeometry(QtCore.QRect(180, 40, 91, 20))
        self.res_max.setObjectName("res_max")
        self.res_max.setText("9.9e3")
        #self.res_max.setValidator(QtGui.QDoubleValidator(1.0,1.0e6,1))
        
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(320, 490, 201, 71))
        self.groupBox_3.setObjectName("groupBox_3")
        self.groupBox_3.setTitle("3. Set target value")
           
        self.target = QtWidgets.QLineEdit(self.groupBox_3)
        self.target.setGeometry(QtCore.QRect(10, 40, 171, 20))
        self.target.setObjectName("target")
        self.Label_target = QtWidgets.QLabel(self.groupBox_3)
        self.Label_target.setGeometry(QtCore.QRect(10, 20, 51, 16))
        self.Label_target.setObjectName("Label_target")
        self.Label_target.setText("Target") 
        
        self.groupBox_3.raise_()
        self.groupBox.raise_()
        self.R1_a__parr__R1_b.raise_()
        self.Go.raise_()
        self.R2__parr__R1_a__parr__R1_b.raise_()
        self.label_1_1.raise_()
        self.label_1_2.raise_()
        self.R1_a__ser__R1_b.raise_()
        self.label_2_1.raise_()
        self.label_2_2.raise_()
        self.R2__ser__R1_a__ser__R1_b.raise_()
        self.R2__div__R1_a.raise_()
        self.label_3_1.raise_()
        self.R2__div__R1_a__ser__R1_b.raise_()
        self.label_3_2.raise_()
        self.line.raise_()
        self.line_2.raise_()
        self.line_3.raise_()
        self.Label_Serial.raise_()
        self.Label_Parallel.raise_()
        self.Label_Divider.raise_()
        self.Label_2res.raise_()
        self.Label_3res.raise_()
        self.groupBox_2.raise_()
        self.help.raise_()
        RES_E24_Calculator.setCentralWidget(self.centralwidget)


        



          ###########################
         ######### ACTIONS #########
        ###########################

        

          ###########################
         ########## SLOTS ##########
        ###########################
                
        self.R1_a__parr__R1_b.clicked.connect(lambda: (self.formula.setText('1/(1/R1_a+1/R1_b)'),
                                                       self.res_select.setCurrentText('none')))

        self.R1_a__ser__R1_b.clicked.connect(lambda: (self.formula.setText('R1_a+R1_b'),
                                                      self.res_select.setCurrentText('none')))

        self.R2__div__R1_a.clicked.connect(lambda: (self.formula.setText('R2/(R2+R1_a)'),
                                                    self.res_select.setCurrentText('R2')))
        
        self.R2__parr__R1_a__parr__R1_b.clicked.connect(lambda:(self.formula.setText('1/(1/R2+1/R1_a+1/R1_b)'),
                                                                self.res_select.setCurrentText('none')))
        
        self.R2__ser__R1_a__ser__R1_b.clicked.connect(lambda:(self.formula.setText('R2+R1_a+R1_b'),
                                                              self.res_select.setCurrentText('none')))
        
        self.R2__div__R1_a__ser__R1_b.clicked.connect(lambda: (self.formula.setText('R2/(R2+R1_a+R1_b)'),
                                                               self.res_select.setCurrentText('R2')))


        self.res_select.currentTextChanged.connect(self.filter_activate)

        self.help.clicked.connect(self.show_help)



    def show_help(self):
        msgBox = QtWidgets.QMessageBox()
        msgBox.setWindowTitle("Tips")
        msgBox.setText("Welcome to RES_E24_Calculator :)\
        \n\nHere are a few tips:\
        \n\n• R1_a & R1_b are considered interchangeable.\
        \nTo avoid duplicates, only combinations with R1_a >= R1_b are computed.\
        \n\n• In the fields \"Formula\" & `\"Target\", you can use \".\" or \",\" as decimal separator,\
        perform calculations and even use python math functions.\
        \n\nFor instances:\n\tmath.sqrt(x) for square root of x\
        \n\tmath.log10(x) for the base-10 logarithm of x\
        \n\tmath.pow(x, y) for x raised to the power y\
        \n\tmath.fabs(x) for the absolute value of x\
        \n\nSee https://docs.python.org/3/library/math.html\
        \n\n• You can launch the search by pressing \"Enter\" or \"Return\" on the keyboard.\
        \n")
        msgBox.exec()





    def filter_activate(self):
        if self.res_select.currentText() == "none":
            self.res_min.setEnabled(False)
            self.res_max.setEnabled(False)
        else:
            self.res_min.setEnabled(True)
            self.res_max.setEnabled(True)

    def checkFormula(self):
        try:
            localFormula=self.formula.text()
            localFormula=localFormula.replace(",",".")

            self.formula.setText(localFormula)
            
            localFormula=localFormula.replace("R1_a","1")
            localFormula=localFormula.replace("R1_b","1")
            localFormula=localFormula.replace("R2","1")
    
            eval(localFormula+'+1')
            return True
        except (ValueError,ArithmeticError,EOFError,NameError,SyntaxError,TypeError):
            return False        

    def checkTarget(self):
        try:
            target_text=self.target.text()
            target_text=target_text.replace(",",".")

            eval(target_text+'+1')
            
            self.target.setText(str(eval(target_text)))
            
            return True
        except (ValueError,ArithmeticError,EOFError,NameError,SyntaxError,TypeError):
            return False

    def checkMinMax(self):
        try:
            res_min_text=self.res_min.text()
            res_min_text=res_min_text.replace(",",".")
            res_max_text=self.res_max.text()
            res_max_text=res_max_text.replace(",",".")
            
            self.res_min.setText(res_min_text)
            self.res_max.setText(res_max_text)
            
            if ((eval(self.res_min.text())>=1)
            and(eval(self.res_max.text())<=1e7)
            and(eval(self.res_min.text())<=eval(self.res_max.text()))):
                return True
            else:
                return False
        except (ValueError,ArithmeticError,EOFError,NameError,SyntaxError,TypeError):
            return False   

    def checkAll(self):  
        if ((self.checkMinMax())
            and(self.checkTarget())
            and(self.checkFormula())
            and(self.formula.text())):
            return True
        else:
            msgBox = QtWidgets.QMessageBox()
            msgBox.setWindowTitle("Oops...")
            msgBox.setText("Please review input parameters (formula, res min/max or Target).")
            msgBox.exec()
        

import GUI.ressource_rc
